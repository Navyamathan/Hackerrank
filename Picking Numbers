import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pickingNumbers' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int pickingNumbers(List<Integer> a) {
        
         HashMap<Integer,Integer> map = new HashMap<>();
        
        for(Integer temp : a)
        {
            if(map.containsKey(temp))
            {
                int values = map.get(temp)+1;
                map.put(temp, values);
            }
            else
            {
                map.put(temp, 1);
            }
        }
        
        
        int max = Integer.MIN_VALUE;
        for(int temp : map.keySet())
        {
            int currentCount = map.get(temp);
            int prev = temp-1;
            int next = temp+1;
            int count1 = 0;
            int count2 = 0;
            if(map.containsKey(prev))
            {
               count1 = map.get(prev);
            }
            if(map.containsKey(next))
            {
               count2 = map.get(next);
            }
            int maximum = Math.max(count1, count2);
            int count = currentCount+maximum;
            max = Math.max(max, count);
        }
        
        return max;
        
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.pickingNumbers(a);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
